{"version":3,"sources":["app.js"],"names":["returnHTML","link","url","hovertext","icon","name","document","addEventListener","updateClock","now","Date","timeString","getHours","toString","padStart","getMinutes","getSeconds","clockElement","getElementById","textContent","setInterval","fetch","then","response","json","data","htmlContent","sections","forEach","section","links","innerHTML","catch","error","console","searchBar","value","focus","event","key","query","trim","searchUrl","encodeURIComponent","window","location","href"],"mappings":"AAkDA,SAAAA,WAAAC,GACA,MAAA,sBACAA,EAAAC,eAAAD,EAAAE,6DACAF,EAAAG,wHACAH,EAAAI,iCAGA,CAzDAC,SAAAC,iBAAA,oBAAA,KACA,SAAAC,IACA,MAAAC,EAAA,IAAAC,KAIAC,EAAA,GAHAF,EAAAG,WAAAC,WAAAC,SAAA,EAAA,QACAL,EAAAM,aAAAF,WAAAC,SAAA,EAAA,QACAL,EAAAO,aAAAH,WAAAC,SAAA,EAAA,OAGAG,EAAAX,SAAAY,eAAA,SACAD,IACAA,EAAAE,YAAAR,EAEA,CACAH,IACAY,YAAAZ,EAAA,KAGAa,MAAA,oBACAC,MAAAC,GAAAA,EAAAC,SACAF,MAAAG,IACA,IAAAC,EAAA,mCACAD,EAAAE,SAAAC,SAAAC,IACAH,GAAA,4BAAAG,EAAAxB,YACAwB,EAAAC,MAAAF,SAAA3B,IACAyB,GAAA1B,WAAAC,EAAA,IAEAyB,GAAA,QAAA,IAEAA,GAAA,SAEApB,SAAAY,eAAA,SAAAa,UAAAL,CAAA,IAEAM,OAAAC,IACAC,QAAAD,MAAA,gCAAAA,EAAA,IAGA,MAAAE,EAAA7B,SAAAY,eAAA,UACAiB,EAAAC,MAAA,GACAD,EAAAE,QACAF,EAAA5B,iBAAA,YAAA,SAAA+B,GACA,GAAA,UAAAA,EAAAC,IAAA,CACA,MAAAC,EAAAL,EAAAC,MAAAK,OACA,GAAAD,EAAA,CACA,MAAAE,EAAA,kCAAAC,mBAAAH,KACAI,OAAAC,SAAAC,KAAAJ,CACA,CACA,CACA,GAAA","file":"app.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    function updateClock() {\r\n        const now = new Date();\r\n        const hours = now.getHours().toString().padStart(2, '0');\r\n        const minutes = now.getMinutes().toString().padStart(2, '0');\r\n        const seconds = now.getSeconds().toString().padStart(2, '0');\r\n        const timeString = `${hours}:${minutes}:${seconds}`;\r\n\r\n        const clockElement = document.getElementById('clock');\r\n        if (clockElement) {\r\n            clockElement.textContent = timeString;\r\n        }\r\n    }\r\n    updateClock();\r\n    setInterval(updateClock, 1000);\r\n    \r\n    \r\n    fetch('/json/links.json')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            let htmlContent = '<div class=\"sections-container\">';\r\n            data.sections.forEach(section => {\r\n                htmlContent += `<div class=\"section\"><h2>${section.name}</h2>`;\r\n                section.links.forEach(link => {\r\n                    htmlContent += returnHTML(link);\r\n                });\r\n                htmlContent += '</div>';\r\n            });\r\n            htmlContent += '</div>';\r\n\r\n            document.getElementById('links').innerHTML = htmlContent;\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching the JSON data:', error);\r\n        });\r\n\r\n    const searchBar = document.getElementById('search');\r\n    searchBar.value = '';\r\n    searchBar.focus();\r\n    searchBar.addEventListener('keypress', function(event) {\r\n        if (event.key === 'Enter') {\r\n            const query = searchBar.value.trim(); // trim() to remove leading/trailing whitespace\r\n            if (query) {\r\n                const searchUrl = `https://duckduckgo.com/?t=h_&q=${encodeURIComponent(query)}`;\r\n                window.location.href = searchUrl;\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\nfunction returnHTML(link) {\r\n    return `\r\n        <a href=\"${link.url}\" title=\"${link.hovertext}\" class=\"link\">\r\n            <iconify-icon icon=\"${link.icon}\" width=\"24\" height=\"24\" style=\"transform: translateY(0px); margin: 3px;\"></iconify-icon>    \r\n            <span>${link.name}</span>\r\n        </a>\r\n    `;\r\n}\r\n"]}