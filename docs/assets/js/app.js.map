{"version":3,"sources":["app.js"],"names":["updateClock","clockElement","document","getElementById","date","Date","innerHTML","toLocaleTimeString","fetchLinks","fetch","then","response","json","data","htmlContent","sections","forEach","section","name","links","link","returnHTML","catch","error","console","url","hovertext","icon","initSearch","searchBar","dropdownButton","dropdownContent","selectedSearchEngine","value","focus","addEventListener","style","display","querySelectorAll","item","event","getAttribute","placeholder","key","query","trim","searchUrl","encodeURIComponent","window","location","href","contains","target","setTimeout","onclick","matches","fetchWeatherData","weatherWidget","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","ok","Error","status","updateWeatherWidget","temperature","current","temp_c","condition","text","setInterval"],"mappings":"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","file":"app.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    updateClock();\r\n    setInterval(updateClock, 1000);\r\n\r\n    fetchLinks();\r\n\r\n    initSearch();\r\n\r\n    fetchWeatherData();\r\n});\r\n\r\nfunction updateClock() {\r\n    const clockElement = document.getElementById('clock');\r\n    let date = new Date();\r\n    clockElement.innerHTML = date.toLocaleTimeString();\r\n}\r\n\r\nfunction fetchLinks() {\r\n    fetch('/json/links.json')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            let htmlContent = '<div class=\"sections-container\">';\r\n            data.sections.forEach(section => {\r\n                htmlContent += `<div class=\"section\"><h2>${section.name}</h2>`;\r\n                section.links.forEach(link => {\r\n                    htmlContent += returnHTML(link);\r\n                });\r\n                htmlContent += '</div>';\r\n            });\r\n            htmlContent += '</div>';\r\n\r\n            document.getElementById('links').innerHTML = htmlContent;\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching the JSON data:', error);\r\n        });\r\n}\r\n\r\nfunction returnHTML(link) {\r\n    return `\r\n        <a href=\"${link.url}\" title=\"${link.hovertext}\" class=\"link\">\r\n            <iconify-icon icon=\"${link.icon}\" class=\"textIcons\"></iconify-icon>    \r\n            <span>${link.name}</span>\r\n        </a>\r\n    `;\r\n}\r\n\r\nfunction initSearch() {\r\n    const searchBar = document.getElementById('search');\r\n    const dropdownButton = document.getElementById('dropdown-button');\r\n    const dropdownContent = document.getElementById('dropdown-content');\r\n    let selectedSearchEngine = 'https://duckduckgo.com/?q=';\r\n\r\n    searchBar.value = '';\r\n    searchBar.focus();\r\n\r\n    dropdownButton.addEventListener('click', () => {\r\n        dropdownContent.style.display = dropdownContent.style.display === 'block' ? 'none' : 'block';\r\n    });\r\n\r\n    document.querySelectorAll('.dropdown-item').forEach(item => {\r\n        item.addEventListener('click', (event) => {\r\n            selectedSearchEngine = item.getAttribute('data-url');\r\n            dropdownButton.innerHTML = item.innerHTML + '<iconify-icon icon=\"uiw:caret-down\"></iconify-icon>';\r\n            dropdownContent.style.display = 'none';\r\n\r\n            if (selectedSearchEngine === 'https://duckduckgo.com/?q=') {\r\n                searchBar.placeholder = 'Searching on DuckDuckGo...';\r\n            } else if (selectedSearchEngine === 'https://www.google.com/search?q=') {\r\n                searchBar.placeholder = 'Searching on Google...';\r\n            } else if (selectedSearchEngine === 'https://www.bing.com/search?q=') {\r\n                searchBar.placeholder = 'Searching on Bing...';\r\n            }\r\n        });\r\n    });\r\n\r\n    searchBar.addEventListener('keypress', function(event) {\r\n        if (event.key === 'Enter') {\r\n            const query = searchBar.value.trim();\r\n            if (query) {\r\n                const searchUrl = `${selectedSearchEngine}${encodeURIComponent(query)}`;\r\n                window.location.href = searchUrl;\r\n            }\r\n        }\r\n    });\r\n\r\n    document.addEventListener('click', (event) => {\r\n        if (!searchBar.contains(event.target) && !dropdownButton.contains(event.target) && !dropdownContent.contains(event.target)) {\r\n            setTimeout(() => searchBar.focus(), 100);\r\n        }\r\n    });\r\n\r\n    window.onclick = function(event) {\r\n        if (!event.target.matches('.dropdown-button')) {\r\n            dropdownContent.style.display = 'none';\r\n        }\r\n    };\r\n}\r\n\r\nfunction fetchWeatherData() {\r\n    const apiKey = '1c70c9d071434cc9884212912240207';\r\n    const weatherWidget = document.getElementById('weather-widget');\r\n\r\n    if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            const lat = position.coords.latitude;\r\n            const lon = position.coords.longitude;\r\n            const apiUrl = `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${lat},${lon}&aqi=no`;\r\n\r\n            fetch(apiUrl)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! status: ${response.status}`);\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    updateWeatherWidget(data);\r\n                })\r\n                .catch(error => {\r\n                    weatherWidget.innerHTML = '<p>Error fetching weather data.</p>';\r\n                    console.error('Error fetching the weather data:', error);\r\n                });\r\n        }, error => {\r\n            weatherWidget.innerHTML = '<p>Unable to retrieve your location.</p>';\r\n            console.error('Error getting the location:', error);\r\n        });\r\n    } else {\r\n        weatherWidget.innerHTML = '<p>Geolocation is not supported by this browser.</p>';\r\n    }\r\n}\r\n\r\nfunction updateWeatherWidget(data) {\r\n    const weatherWidget = document.getElementById('weather-widget');\r\n    const temperature = data.current.temp_c;\r\n    const condition = data.current.condition.text;\r\n    const icon = data.current.condition.icon;\r\n\r\n    weatherWidget.innerHTML = `\r\n        <p class=\"temperature\">${temperature}Â°C</p>\r\n        <p class=\"condition\">${condition}</p>\r\n        <img src=\"${icon}\" alt=\"${condition}\">\r\n    `;\r\n}\r\n"]}